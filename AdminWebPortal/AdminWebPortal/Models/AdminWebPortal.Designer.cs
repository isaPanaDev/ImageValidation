//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ImageValidationModel", "FK_AccountHistory_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdminWebPortal.Models.User), "AccountHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdminWebPortal.Models.AccountHistory), true)]
[assembly: EdmRelationshipAttribute("ImageValidationModel", "FK_Application_Computer", "Computer", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdminWebPortal.Models.Computer), "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdminWebPortal.Models.Application), true)]
[assembly: EdmRelationshipAttribute("ImageValidationModel", "FK_ApplicationDriverDepency_Application", "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdminWebPortal.Models.Application), "ApplicationDriverDepency", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdminWebPortal.Models.ApplicationDriverDepency), true)]
[assembly: EdmRelationshipAttribute("ImageValidationModel", "FK_ApplicationDriverDepency_Driver", "Driver", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdminWebPortal.Models.Driver), "ApplicationDriverDepency", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdminWebPortal.Models.ApplicationDriverDepency), true)]
[assembly: EdmRelationshipAttribute("ImageValidationModel", "FK_Computer_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdminWebPortal.Models.User), "Computer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdminWebPortal.Models.Computer), true)]
[assembly: EdmRelationshipAttribute("ImageValidationModel", "FK_Driver_Computer", "Computer", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdminWebPortal.Models.Computer), "Driver", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdminWebPortal.Models.Driver), true)]
[assembly: EdmRelationshipAttribute("ImageValidationModel", "FK_FileFolder_Computer", "Computer", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdminWebPortal.Models.Computer), "FileFolder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdminWebPortal.Models.FileFolder), true)]
[assembly: EdmRelationshipAttribute("ImageValidationModel", "FK_HotFix_Computer", "Computer", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdminWebPortal.Models.Computer), "HotFix", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdminWebPortal.Models.HotFix), true)]
[assembly: EdmRelationshipAttribute("ImageValidationModel", "FK_RegistryGrouping_Computer", "Computer", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdminWebPortal.Models.Computer), "RegistryGrouping", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdminWebPortal.Models.RegistryGrouping), true)]
[assembly: EdmRelationshipAttribute("ImageValidationModel", "FK_FailedLogon_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdminWebPortal.Models.User), "FailedLogon", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdminWebPortal.Models.FailedLogon), true)]
[assembly: EdmRelationshipAttribute("ImageValidationModel", "FK_FileFolder_FileFolderType", "FileFolderType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdminWebPortal.Models.FileFolderType), "FileFolder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdminWebPortal.Models.FileFolder), true)]
[assembly: EdmRelationshipAttribute("ImageValidationModel", "FK_User_Permission", "Permission", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdminWebPortal.Models.Permission), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdminWebPortal.Models.User), true)]
[assembly: EdmRelationshipAttribute("ImageValidationModel", "FK_UserPermission_Permission", "Permission", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdminWebPortal.Models.Permission), "UserPermission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdminWebPortal.Models.UserPermission), true)]
[assembly: EdmRelationshipAttribute("ImageValidationModel", "FK_RegistryGrouping_Registry", "Registry", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdminWebPortal.Models.Registry), "RegistryGrouping", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdminWebPortal.Models.RegistryGrouping), true)]
[assembly: EdmRelationshipAttribute("ImageValidationModel", "FK_RegistryGrouping_RegistryGroup", "RegistryGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdminWebPortal.Models.RegistryGroup), "RegistryGrouping", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdminWebPortal.Models.RegistryGrouping), true)]
[assembly: EdmRelationshipAttribute("ImageValidationModel", "FK_UserPermission_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdminWebPortal.Models.User), "UserPermission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdminWebPortal.Models.UserPermission), true)]

#endregion

namespace AdminWebPortal.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ImageValidationEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ImageValidationEntities object using the connection string found in the 'ImageValidationEntities' section of the application configuration file.
        /// </summary>
        public ImageValidationEntities() : base("name=ImageValidationEntities", "ImageValidationEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ImageValidationEntities object.
        /// </summary>
        public ImageValidationEntities(string connectionString) : base(connectionString, "ImageValidationEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ImageValidationEntities object.
        /// </summary>
        public ImageValidationEntities(EntityConnection connection) : base(connection, "ImageValidationEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AccountHistory> AccountHistories
        {
            get
            {
                if ((_AccountHistories == null))
                {
                    _AccountHistories = base.CreateObjectSet<AccountHistory>("AccountHistories");
                }
                return _AccountHistories;
            }
        }
        private ObjectSet<AccountHistory> _AccountHistories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Application> Applications
        {
            get
            {
                if ((_Applications == null))
                {
                    _Applications = base.CreateObjectSet<Application>("Applications");
                }
                return _Applications;
            }
        }
        private ObjectSet<Application> _Applications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ApplicationDriverDepency> ApplicationDriverDepencies
        {
            get
            {
                if ((_ApplicationDriverDepencies == null))
                {
                    _ApplicationDriverDepencies = base.CreateObjectSet<ApplicationDriverDepency>("ApplicationDriverDepencies");
                }
                return _ApplicationDriverDepencies;
            }
        }
        private ObjectSet<ApplicationDriverDepency> _ApplicationDriverDepencies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Computer> Computers
        {
            get
            {
                if ((_Computers == null))
                {
                    _Computers = base.CreateObjectSet<Computer>("Computers");
                }
                return _Computers;
            }
        }
        private ObjectSet<Computer> _Computers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Driver> Drivers
        {
            get
            {
                if ((_Drivers == null))
                {
                    _Drivers = base.CreateObjectSet<Driver>("Drivers");
                }
                return _Drivers;
            }
        }
        private ObjectSet<Driver> _Drivers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeeLogin> EmployeeLogins
        {
            get
            {
                if ((_EmployeeLogins == null))
                {
                    _EmployeeLogins = base.CreateObjectSet<EmployeeLogin>("EmployeeLogins");
                }
                return _EmployeeLogins;
            }
        }
        private ObjectSet<EmployeeLogin> _EmployeeLogins;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FailedLogon> FailedLogons
        {
            get
            {
                if ((_FailedLogons == null))
                {
                    _FailedLogons = base.CreateObjectSet<FailedLogon>("FailedLogons");
                }
                return _FailedLogons;
            }
        }
        private ObjectSet<FailedLogon> _FailedLogons;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FileFolder> FileFolders
        {
            get
            {
                if ((_FileFolders == null))
                {
                    _FileFolders = base.CreateObjectSet<FileFolder>("FileFolders");
                }
                return _FileFolders;
            }
        }
        private ObjectSet<FileFolder> _FileFolders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FileFolderType> FileFolderTypes
        {
            get
            {
                if ((_FileFolderTypes == null))
                {
                    _FileFolderTypes = base.CreateObjectSet<FileFolderType>("FileFolderTypes");
                }
                return _FileFolderTypes;
            }
        }
        private ObjectSet<FileFolderType> _FileFolderTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HotFix> HotFixes
        {
            get
            {
                if ((_HotFixes == null))
                {
                    _HotFixes = base.CreateObjectSet<HotFix>("HotFixes");
                }
                return _HotFixes;
            }
        }
        private ObjectSet<HotFix> _HotFixes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OperatingSystem> OperatingSystems
        {
            get
            {
                if ((_OperatingSystems == null))
                {
                    _OperatingSystems = base.CreateObjectSet<OperatingSystem>("OperatingSystems");
                }
                return _OperatingSystems;
            }
        }
        private ObjectSet<OperatingSystem> _OperatingSystems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Permission> Permissions
        {
            get
            {
                if ((_Permissions == null))
                {
                    _Permissions = base.CreateObjectSet<Permission>("Permissions");
                }
                return _Permissions;
            }
        }
        private ObjectSet<Permission> _Permissions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Product> Products
        {
            get
            {
                if ((_Products == null))
                {
                    _Products = base.CreateObjectSet<Product>("Products");
                }
                return _Products;
            }
        }
        private ObjectSet<Product> _Products;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<QuickSearch> QuickSearches
        {
            get
            {
                if ((_QuickSearches == null))
                {
                    _QuickSearches = base.CreateObjectSet<QuickSearch>("QuickSearches");
                }
                return _QuickSearches;
            }
        }
        private ObjectSet<QuickSearch> _QuickSearches;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Registry> Registries
        {
            get
            {
                if ((_Registries == null))
                {
                    _Registries = base.CreateObjectSet<Registry>("Registries");
                }
                return _Registries;
            }
        }
        private ObjectSet<Registry> _Registries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RegistryGroup> RegistryGroups
        {
            get
            {
                if ((_RegistryGroups == null))
                {
                    _RegistryGroups = base.CreateObjectSet<RegistryGroup>("RegistryGroups");
                }
                return _RegistryGroups;
            }
        }
        private ObjectSet<RegistryGroup> _RegistryGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RegistryGrouping> RegistryGroupings
        {
            get
            {
                if ((_RegistryGroupings == null))
                {
                    _RegistryGroupings = base.CreateObjectSet<RegistryGrouping>("RegistryGroupings");
                }
                return _RegistryGroupings;
            }
        }
        private ObjectSet<RegistryGrouping> _RegistryGroupings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserPermission> UserPermissions
        {
            get
            {
                if ((_UserPermissions == null))
                {
                    _UserPermissions = base.CreateObjectSet<UserPermission>("UserPermissions");
                }
                return _UserPermissions;
            }
        }
        private ObjectSet<UserPermission> _UserPermissions;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AccountHistories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccountHistories(AccountHistory accountHistory)
        {
            base.AddObject("AccountHistories", accountHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Applications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToApplications(Application application)
        {
            base.AddObject("Applications", application);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ApplicationDriverDepencies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToApplicationDriverDepencies(ApplicationDriverDepency applicationDriverDepency)
        {
            base.AddObject("ApplicationDriverDepencies", applicationDriverDepency);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Computers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToComputers(Computer computer)
        {
            base.AddObject("Computers", computer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Drivers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDrivers(Driver driver)
        {
            base.AddObject("Drivers", driver);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeeLogins EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeeLogins(EmployeeLogin employeeLogin)
        {
            base.AddObject("EmployeeLogins", employeeLogin);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FailedLogons EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFailedLogons(FailedLogon failedLogon)
        {
            base.AddObject("FailedLogons", failedLogon);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FileFolders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFileFolders(FileFolder fileFolder)
        {
            base.AddObject("FileFolders", fileFolder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FileFolderTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFileFolderTypes(FileFolderType fileFolderType)
        {
            base.AddObject("FileFolderTypes", fileFolderType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HotFixes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHotFixes(HotFix hotFix)
        {
            base.AddObject("HotFixes", hotFix);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OperatingSystems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOperatingSystems(OperatingSystem operatingSystem)
        {
            base.AddObject("OperatingSystems", operatingSystem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Permissions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPermissions(Permission permission)
        {
            base.AddObject("Permissions", permission);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Products EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProducts(Product product)
        {
            base.AddObject("Products", product);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the QuickSearches EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQuickSearches(QuickSearch quickSearch)
        {
            base.AddObject("QuickSearches", quickSearch);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Registries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRegistries(Registry registry)
        {
            base.AddObject("Registries", registry);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RegistryGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRegistryGroups(RegistryGroup registryGroup)
        {
            base.AddObject("RegistryGroups", registryGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RegistryGroupings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRegistryGroupings(RegistryGrouping registryGrouping)
        {
            base.AddObject("RegistryGroupings", registryGrouping);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserPermissions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserPermissions(UserPermission userPermission)
        {
            base.AddObject("UserPermissions", userPermission);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ImageValidationModel", Name="AccountHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AccountHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AccountHistory object.
        /// </summary>
        /// <param name="accountHistoryID">Initial value of the AccountHistoryID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="loginDate">Initial value of the LoginDate property.</param>
        public static AccountHistory CreateAccountHistory(global::System.Int32 accountHistoryID, global::System.Int32 userID, global::System.DateTime loginDate)
        {
            AccountHistory accountHistory = new AccountHistory();
            accountHistory.AccountHistoryID = accountHistoryID;
            accountHistory.UserID = userID;
            accountHistory.LoginDate = loginDate;
            return accountHistory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountHistoryID
        {
            get
            {
                return _AccountHistoryID;
            }
            set
            {
                if (_AccountHistoryID != value)
                {
                    OnAccountHistoryIDChanging(value);
                    ReportPropertyChanging("AccountHistoryID");
                    _AccountHistoryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AccountHistoryID");
                    OnAccountHistoryIDChanged();
                }
            }
        }
        private global::System.Int32 _AccountHistoryID;
        partial void OnAccountHistoryIDChanging(global::System.Int32 value);
        partial void OnAccountHistoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LoginDate
        {
            get
            {
                return _LoginDate;
            }
            set
            {
                OnLoginDateChanging(value);
                ReportPropertyChanging("LoginDate");
                _LoginDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoginDate");
                OnLoginDateChanged();
            }
        }
        private global::System.DateTime _LoginDate;
        partial void OnLoginDateChanging(global::System.DateTime value);
        partial void OnLoginDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SessionID
        {
            get
            {
                return _SessionID;
            }
            set
            {
                OnSessionIDChanging(value);
                ReportPropertyChanging("SessionID");
                _SessionID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SessionID");
                OnSessionIDChanged();
            }
        }
        private global::System.String _SessionID;
        partial void OnSessionIDChanging(global::System.String value);
        partial void OnSessionIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ImageValidationModel", "FK_AccountHistory_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ImageValidationModel.FK_AccountHistory_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ImageValidationModel.FK_AccountHistory_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ImageValidationModel.FK_AccountHistory_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ImageValidationModel.FK_AccountHistory_User", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ImageValidationModel", Name="Application")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Application : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Application object.
        /// </summary>
        /// <param name="applicationID">Initial value of the ApplicationID property.</param>
        public static Application CreateApplication(global::System.Int32 applicationID)
        {
            Application application = new Application();
            application.ApplicationID = applicationID;
            return application;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ApplicationID
        {
            get
            {
                return _ApplicationID;
            }
            set
            {
                if (_ApplicationID != value)
                {
                    OnApplicationIDChanging(value);
                    ReportPropertyChanging("ApplicationID");
                    _ApplicationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ApplicationID");
                    OnApplicationIDChanged();
                }
            }
        }
        private global::System.Int32 _ApplicationID;
        partial void OnApplicationIDChanging(global::System.Int32 value);
        partial void OnApplicationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ComputerID
        {
            get
            {
                return _ComputerID;
            }
            set
            {
                OnComputerIDChanging(value);
                ReportPropertyChanging("ComputerID");
                _ComputerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ComputerID");
                OnComputerIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ComputerID;
        partial void OnComputerIDChanging(Nullable<global::System.Int32> value);
        partial void OnComputerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DisplayName
        {
            get
            {
                return _DisplayName;
            }
            set
            {
                OnDisplayNameChanging(value);
                ReportPropertyChanging("DisplayName");
                _DisplayName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DisplayName");
                OnDisplayNameChanged();
            }
        }
        private global::System.String _DisplayName;
        partial void OnDisplayNameChanging(global::System.String value);
        partial void OnDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DisplayVersion
        {
            get
            {
                return _DisplayVersion;
            }
            set
            {
                OnDisplayVersionChanging(value);
                ReportPropertyChanging("DisplayVersion");
                _DisplayVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DisplayVersion");
                OnDisplayVersionChanged();
            }
        }
        private global::System.String _DisplayVersion;
        partial void OnDisplayVersionChanging(global::System.String value);
        partial void OnDisplayVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Publisher
        {
            get
            {
                return _Publisher;
            }
            set
            {
                OnPublisherChanging(value);
                ReportPropertyChanging("Publisher");
                _Publisher = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Publisher");
                OnPublisherChanged();
            }
        }
        private global::System.String _Publisher;
        partial void OnPublisherChanging(global::System.String value);
        partial void OnPublisherChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VersionMinor
        {
            get
            {
                return _VersionMinor;
            }
            set
            {
                OnVersionMinorChanging(value);
                ReportPropertyChanging("VersionMinor");
                _VersionMinor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VersionMinor");
                OnVersionMinorChanged();
            }
        }
        private global::System.String _VersionMinor;
        partial void OnVersionMinorChanging(global::System.String value);
        partial void OnVersionMinorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VersionMajor
        {
            get
            {
                return _VersionMajor;
            }
            set
            {
                OnVersionMajorChanging(value);
                ReportPropertyChanging("VersionMajor");
                _VersionMajor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VersionMajor");
                OnVersionMajorChanged();
            }
        }
        private global::System.String _VersionMajor;
        partial void OnVersionMajorChanging(global::System.String value);
        partial void OnVersionMajorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Version
        {
            get
            {
                return _Version;
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.String _Version;
        partial void OnVersionChanging(global::System.String value);
        partial void OnVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HelpLink
        {
            get
            {
                return _HelpLink;
            }
            set
            {
                OnHelpLinkChanging(value);
                ReportPropertyChanging("HelpLink");
                _HelpLink = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HelpLink");
                OnHelpLinkChanged();
            }
        }
        private global::System.String _HelpLink;
        partial void OnHelpLinkChanging(global::System.String value);
        partial void OnHelpLinkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HelpTelephone
        {
            get
            {
                return _HelpTelephone;
            }
            set
            {
                OnHelpTelephoneChanging(value);
                ReportPropertyChanging("HelpTelephone");
                _HelpTelephone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HelpTelephone");
                OnHelpTelephoneChanged();
            }
        }
        private global::System.String _HelpTelephone;
        partial void OnHelpTelephoneChanging(global::System.String value);
        partial void OnHelpTelephoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InstallDate
        {
            get
            {
                return _InstallDate;
            }
            set
            {
                OnInstallDateChanging(value);
                ReportPropertyChanging("InstallDate");
                _InstallDate = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InstallDate");
                OnInstallDateChanged();
            }
        }
        private global::System.String _InstallDate;
        partial void OnInstallDateChanging(global::System.String value);
        partial void OnInstallDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InstallLocation
        {
            get
            {
                return _InstallLocation;
            }
            set
            {
                OnInstallLocationChanging(value);
                ReportPropertyChanging("InstallLocation");
                _InstallLocation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InstallLocation");
                OnInstallLocationChanged();
            }
        }
        private global::System.String _InstallLocation;
        partial void OnInstallLocationChanging(global::System.String value);
        partial void OnInstallLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InstallSource
        {
            get
            {
                return _InstallSource;
            }
            set
            {
                OnInstallSourceChanging(value);
                ReportPropertyChanging("InstallSource");
                _InstallSource = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InstallSource");
                OnInstallSourceChanged();
            }
        }
        private global::System.String _InstallSource;
        partial void OnInstallSourceChanging(global::System.String value);
        partial void OnInstallSourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String URLInfoAbout
        {
            get
            {
                return _URLInfoAbout;
            }
            set
            {
                OnURLInfoAboutChanging(value);
                ReportPropertyChanging("URLInfoAbout");
                _URLInfoAbout = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("URLInfoAbout");
                OnURLInfoAboutChanged();
            }
        }
        private global::System.String _URLInfoAbout;
        partial void OnURLInfoAboutChanging(global::System.String value);
        partial void OnURLInfoAboutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String URLUpdateInfo
        {
            get
            {
                return _URLUpdateInfo;
            }
            set
            {
                OnURLUpdateInfoChanging(value);
                ReportPropertyChanging("URLUpdateInfo");
                _URLUpdateInfo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("URLUpdateInfo");
                OnURLUpdateInfoChanged();
            }
        }
        private global::System.String _URLUpdateInfo;
        partial void OnURLUpdateInfoChanging(global::System.String value);
        partial void OnURLUpdateInfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AuthorizedCDFPrefix
        {
            get
            {
                return _AuthorizedCDFPrefix;
            }
            set
            {
                OnAuthorizedCDFPrefixChanging(value);
                ReportPropertyChanging("AuthorizedCDFPrefix");
                _AuthorizedCDFPrefix = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AuthorizedCDFPrefix");
                OnAuthorizedCDFPrefixChanged();
            }
        }
        private global::System.String _AuthorizedCDFPrefix;
        partial void OnAuthorizedCDFPrefixChanging(global::System.String value);
        partial void OnAuthorizedCDFPrefixChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Contact
        {
            get
            {
                return _Contact;
            }
            set
            {
                OnContactChanging(value);
                ReportPropertyChanging("Contact");
                _Contact = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Contact");
                OnContactChanged();
            }
        }
        private global::System.String _Contact;
        partial void OnContactChanging(global::System.String value);
        partial void OnContactChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EstimatedSize
        {
            get
            {
                return _EstimatedSize;
            }
            set
            {
                OnEstimatedSizeChanging(value);
                ReportPropertyChanging("EstimatedSize");
                _EstimatedSize = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EstimatedSize");
                OnEstimatedSizeChanged();
            }
        }
        private global::System.String _EstimatedSize;
        partial void OnEstimatedSizeChanging(global::System.String value);
        partial void OnEstimatedSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Language
        {
            get
            {
                return _Language;
            }
            set
            {
                OnLanguageChanging(value);
                ReportPropertyChanging("Language");
                _Language = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Language");
                OnLanguageChanged();
            }
        }
        private global::System.String _Language;
        partial void OnLanguageChanging(global::System.String value);
        partial void OnLanguageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModifyPath
        {
            get
            {
                return _ModifyPath;
            }
            set
            {
                OnModifyPathChanging(value);
                ReportPropertyChanging("ModifyPath");
                _ModifyPath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ModifyPath");
                OnModifyPathChanged();
            }
        }
        private global::System.String _ModifyPath;
        partial void OnModifyPathChanging(global::System.String value);
        partial void OnModifyPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReadMe
        {
            get
            {
                return _ReadMe;
            }
            set
            {
                OnReadMeChanging(value);
                ReportPropertyChanging("ReadMe");
                _ReadMe = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ReadMe");
                OnReadMeChanged();
            }
        }
        private global::System.String _ReadMe;
        partial void OnReadMeChanging(global::System.String value);
        partial void OnReadMeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UnInstallString
        {
            get
            {
                return _UnInstallString;
            }
            set
            {
                OnUnInstallStringChanging(value);
                ReportPropertyChanging("UnInstallString");
                _UnInstallString = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UnInstallString");
                OnUnInstallStringChanged();
            }
        }
        private global::System.String _UnInstallString;
        partial void OnUnInstallStringChanging(global::System.String value);
        partial void OnUnInstallStringChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SettingIdentifier
        {
            get
            {
                return _SettingIdentifier;
            }
            set
            {
                OnSettingIdentifierChanging(value);
                ReportPropertyChanging("SettingIdentifier");
                _SettingIdentifier = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SettingIdentifier");
                OnSettingIdentifierChanged();
            }
        }
        private global::System.String _SettingIdentifier;
        partial void OnSettingIdentifierChanging(global::System.String value);
        partial void OnSettingIdentifierChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsRequired
        {
            get
            {
                return _IsRequired;
            }
            set
            {
                OnIsRequiredChanging(value);
                ReportPropertyChanging("IsRequired");
                _IsRequired = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsRequired");
                OnIsRequiredChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsRequired;
        partial void OnIsRequiredChanging(Nullable<global::System.Boolean> value);
        partial void OnIsRequiredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ApplicationUrl
        {
            get
            {
                return _ApplicationUrl;
            }
            set
            {
                OnApplicationUrlChanging(value);
                ReportPropertyChanging("ApplicationUrl");
                _ApplicationUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ApplicationUrl");
                OnApplicationUrlChanged();
            }
        }
        private global::System.String _ApplicationUrl;
        partial void OnApplicationUrlChanging(global::System.String value);
        partial void OnApplicationUrlChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ImageValidationModel", "FK_Application_Computer", "Computer")]
        public Computer Computer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Computer>("ImageValidationModel.FK_Application_Computer", "Computer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Computer>("ImageValidationModel.FK_Application_Computer", "Computer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Computer> ComputerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Computer>("ImageValidationModel.FK_Application_Computer", "Computer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Computer>("ImageValidationModel.FK_Application_Computer", "Computer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ImageValidationModel", "FK_ApplicationDriverDepency_Application", "ApplicationDriverDepency")]
        public EntityCollection<ApplicationDriverDepency> ApplicationDriverDepencies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ApplicationDriverDepency>("ImageValidationModel.FK_ApplicationDriverDepency_Application", "ApplicationDriverDepency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ApplicationDriverDepency>("ImageValidationModel.FK_ApplicationDriverDepency_Application", "ApplicationDriverDepency", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ImageValidationModel", Name="ApplicationDriverDepency")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ApplicationDriverDepency : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ApplicationDriverDepency object.
        /// </summary>
        /// <param name="applicationDriverDepencyID">Initial value of the ApplicationDriverDepencyID property.</param>
        public static ApplicationDriverDepency CreateApplicationDriverDepency(global::System.Int32 applicationDriverDepencyID)
        {
            ApplicationDriverDepency applicationDriverDepency = new ApplicationDriverDepency();
            applicationDriverDepency.ApplicationDriverDepencyID = applicationDriverDepencyID;
            return applicationDriverDepency;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ApplicationDriverDepencyID
        {
            get
            {
                return _ApplicationDriverDepencyID;
            }
            set
            {
                if (_ApplicationDriverDepencyID != value)
                {
                    OnApplicationDriverDepencyIDChanging(value);
                    ReportPropertyChanging("ApplicationDriverDepencyID");
                    _ApplicationDriverDepencyID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ApplicationDriverDepencyID");
                    OnApplicationDriverDepencyIDChanged();
                }
            }
        }
        private global::System.Int32 _ApplicationDriverDepencyID;
        partial void OnApplicationDriverDepencyIDChanging(global::System.Int32 value);
        partial void OnApplicationDriverDepencyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ApplicationID
        {
            get
            {
                return _ApplicationID;
            }
            set
            {
                OnApplicationIDChanging(value);
                ReportPropertyChanging("ApplicationID");
                _ApplicationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationID");
                OnApplicationIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ApplicationID;
        partial void OnApplicationIDChanging(Nullable<global::System.Int32> value);
        partial void OnApplicationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DriverID
        {
            get
            {
                return _DriverID;
            }
            set
            {
                OnDriverIDChanging(value);
                ReportPropertyChanging("DriverID");
                _DriverID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DriverID");
                OnDriverIDChanged();
            }
        }
        private Nullable<global::System.Int32> _DriverID;
        partial void OnDriverIDChanging(Nullable<global::System.Int32> value);
        partial void OnDriverIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ImageValidationModel", "FK_ApplicationDriverDepency_Application", "Application")]
        public Application Application
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("ImageValidationModel.FK_ApplicationDriverDepency_Application", "Application").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("ImageValidationModel.FK_ApplicationDriverDepency_Application", "Application").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Application> ApplicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("ImageValidationModel.FK_ApplicationDriverDepency_Application", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Application>("ImageValidationModel.FK_ApplicationDriverDepency_Application", "Application", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ImageValidationModel", "FK_ApplicationDriverDepency_Driver", "Driver")]
        public Driver Driver
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Driver>("ImageValidationModel.FK_ApplicationDriverDepency_Driver", "Driver").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Driver>("ImageValidationModel.FK_ApplicationDriverDepency_Driver", "Driver").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Driver> DriverReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Driver>("ImageValidationModel.FK_ApplicationDriverDepency_Driver", "Driver");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Driver>("ImageValidationModel.FK_ApplicationDriverDepency_Driver", "Driver", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ImageValidationModel", Name="Computer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Computer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Computer object.
        /// </summary>
        /// <param name="computerID">Initial value of the ComputerID property.</param>
        public static Computer CreateComputer(global::System.Int32 computerID)
        {
            Computer computer = new Computer();
            computer.ComputerID = computerID;
            return computer;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ComputerID
        {
            get
            {
                return _ComputerID;
            }
            set
            {
                if (_ComputerID != value)
                {
                    OnComputerIDChanging(value);
                    ReportPropertyChanging("ComputerID");
                    _ComputerID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ComputerID");
                    OnComputerIDChanged();
                }
            }
        }
        private global::System.Int32 _ComputerID;
        partial void OnComputerIDChanging(global::System.Int32 value);
        partial void OnComputerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _UserID;
        partial void OnUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Model
        {
            get
            {
                return _Model;
            }
            set
            {
                OnModelChanging(value);
                ReportPropertyChanging("Model");
                _Model = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Model");
                OnModelChanged();
            }
        }
        private global::System.String _Model;
        partial void OnModelChanging(global::System.String value);
        partial void OnModelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Product
        {
            get
            {
                return _Product;
            }
            set
            {
                OnProductChanging(value);
                ReportPropertyChanging("Product");
                _Product = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Product");
                OnProductChanged();
            }
        }
        private global::System.String _Product;
        partial void OnProductChanging(global::System.String value);
        partial void OnProductChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BuildNumber
        {
            get
            {
                return _BuildNumber;
            }
            set
            {
                OnBuildNumberChanging(value);
                ReportPropertyChanging("BuildNumber");
                _BuildNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BuildNumber");
                OnBuildNumberChanged();
            }
        }
        private global::System.String _BuildNumber;
        partial void OnBuildNumberChanging(global::System.String value);
        partial void OnBuildNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Caption
        {
            get
            {
                return _Caption;
            }
            set
            {
                OnCaptionChanging(value);
                ReportPropertyChanging("Caption");
                _Caption = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Caption");
                OnCaptionChanged();
            }
        }
        private global::System.String _Caption;
        partial void OnCaptionChanging(global::System.String value);
        partial void OnCaptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CSDVersion
        {
            get
            {
                return _CSDVersion;
            }
            set
            {
                OnCSDVersionChanging(value);
                ReportPropertyChanging("CSDVersion");
                _CSDVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CSDVersion");
                OnCSDVersionChanged();
            }
        }
        private global::System.String _CSDVersion;
        partial void OnCSDVersionChanging(global::System.String value);
        partial void OnCSDVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InstallDate
        {
            get
            {
                return _InstallDate;
            }
            set
            {
                OnInstallDateChanging(value);
                ReportPropertyChanging("InstallDate");
                _InstallDate = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InstallDate");
                OnInstallDateChanged();
            }
        }
        private global::System.String _InstallDate;
        partial void OnInstallDateChanging(global::System.String value);
        partial void OnInstallDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MUILanguages
        {
            get
            {
                return _MUILanguages;
            }
            set
            {
                OnMUILanguagesChanging(value);
                ReportPropertyChanging("MUILanguages");
                _MUILanguages = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MUILanguages");
                OnMUILanguagesChanged();
            }
        }
        private global::System.String _MUILanguages;
        partial void OnMUILanguagesChanging(global::System.String value);
        partial void OnMUILanguagesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OSArchitecture
        {
            get
            {
                return _OSArchitecture;
            }
            set
            {
                OnOSArchitectureChanging(value);
                ReportPropertyChanging("OSArchitecture");
                _OSArchitecture = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OSArchitecture");
                OnOSArchitectureChanged();
            }
        }
        private global::System.String _OSArchitecture;
        partial void OnOSArchitectureChanging(global::System.String value);
        partial void OnOSArchitectureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OSLanguage
        {
            get
            {
                return _OSLanguage;
            }
            set
            {
                OnOSLanguageChanging(value);
                ReportPropertyChanging("OSLanguage");
                _OSLanguage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OSLanguage");
                OnOSLanguageChanged();
            }
        }
        private global::System.String _OSLanguage;
        partial void OnOSLanguageChanging(global::System.String value);
        partial void OnOSLanguageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OSProductSuite
        {
            get
            {
                return _OSProductSuite;
            }
            set
            {
                OnOSProductSuiteChanging(value);
                ReportPropertyChanging("OSProductSuite");
                _OSProductSuite = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OSProductSuite");
                OnOSProductSuiteChanged();
            }
        }
        private global::System.String _OSProductSuite;
        partial void OnOSProductSuiteChanging(global::System.String value);
        partial void OnOSProductSuiteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OSType
        {
            get
            {
                return _OSType;
            }
            set
            {
                OnOSTypeChanging(value);
                ReportPropertyChanging("OSType");
                _OSType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OSType");
                OnOSTypeChanged();
            }
        }
        private global::System.String _OSType;
        partial void OnOSTypeChanging(global::System.String value);
        partial void OnOSTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ServicePackMajorVersion
        {
            get
            {
                return _ServicePackMajorVersion;
            }
            set
            {
                OnServicePackMajorVersionChanging(value);
                ReportPropertyChanging("ServicePackMajorVersion");
                _ServicePackMajorVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ServicePackMajorVersion");
                OnServicePackMajorVersionChanged();
            }
        }
        private global::System.String _ServicePackMajorVersion;
        partial void OnServicePackMajorVersionChanging(global::System.String value);
        partial void OnServicePackMajorVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ServicePackMinorVersion
        {
            get
            {
                return _ServicePackMinorVersion;
            }
            set
            {
                OnServicePackMinorVersionChanging(value);
                ReportPropertyChanging("ServicePackMinorVersion");
                _ServicePackMinorVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ServicePackMinorVersion");
                OnServicePackMinorVersionChanged();
            }
        }
        private global::System.String _ServicePackMinorVersion;
        partial void OnServicePackMinorVersionChanging(global::System.String value);
        partial void OnServicePackMinorVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SystemDirectory
        {
            get
            {
                return _SystemDirectory;
            }
            set
            {
                OnSystemDirectoryChanging(value);
                ReportPropertyChanging("SystemDirectory");
                _SystemDirectory = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SystemDirectory");
                OnSystemDirectoryChanged();
            }
        }
        private global::System.String _SystemDirectory;
        partial void OnSystemDirectoryChanging(global::System.String value);
        partial void OnSystemDirectoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Version
        {
            get
            {
                return _Version;
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.String _Version;
        partial void OnVersionChanging(global::System.String value);
        partial void OnVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WindowsDirectory
        {
            get
            {
                return _WindowsDirectory;
            }
            set
            {
                OnWindowsDirectoryChanging(value);
                ReportPropertyChanging("WindowsDirectory");
                _WindowsDirectory = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WindowsDirectory");
                OnWindowsDirectoryChanged();
            }
        }
        private global::System.String _WindowsDirectory;
        partial void OnWindowsDirectoryChanging(global::System.String value);
        partial void OnWindowsDirectoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Manufacturer
        {
            get
            {
                return _Manufacturer;
            }
            set
            {
                OnManufacturerChanging(value);
                ReportPropertyChanging("Manufacturer");
                _Manufacturer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Manufacturer");
                OnManufacturerChanged();
            }
        }
        private global::System.String _Manufacturer;
        partial void OnManufacturerChanging(global::System.String value);
        partial void OnManufacturerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Manufacturer2
        {
            get
            {
                return _Manufacturer2;
            }
            set
            {
                OnManufacturer2Changing(value);
                ReportPropertyChanging("Manufacturer2");
                _Manufacturer2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Manufacturer2");
                OnManufacturer2Changed();
            }
        }
        private global::System.String _Manufacturer2;
        partial void OnManufacturer2Changing(global::System.String value);
        partial void OnManufacturer2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ComputerRecordAddDate
        {
            get
            {
                return _ComputerRecordAddDate;
            }
            set
            {
                OnComputerRecordAddDateChanging(value);
                ReportPropertyChanging("ComputerRecordAddDate");
                _ComputerRecordAddDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ComputerRecordAddDate");
                OnComputerRecordAddDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ComputerRecordAddDate;
        partial void OnComputerRecordAddDateChanging(Nullable<global::System.DateTime> value);
        partial void OnComputerRecordAddDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsPrimaryProduct
        {
            get
            {
                return _IsPrimaryProduct;
            }
            set
            {
                OnIsPrimaryProductChanging(value);
                ReportPropertyChanging("IsPrimaryProduct");
                _IsPrimaryProduct = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPrimaryProduct");
                OnIsPrimaryProductChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsPrimaryProduct;
        partial void OnIsPrimaryProductChanging(Nullable<global::System.Boolean> value);
        partial void OnIsPrimaryProductChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsPrimaryModel
        {
            get
            {
                return _IsPrimaryModel;
            }
            set
            {
                OnIsPrimaryModelChanging(value);
                ReportPropertyChanging("IsPrimaryModel");
                _IsPrimaryModel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPrimaryModel");
                OnIsPrimaryModelChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsPrimaryModel;
        partial void OnIsPrimaryModelChanging(Nullable<global::System.Boolean> value);
        partial void OnIsPrimaryModelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SerialNumber
        {
            get
            {
                return _SerialNumber;
            }
            set
            {
                OnSerialNumberChanging(value);
                ReportPropertyChanging("SerialNumber");
                _SerialNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SerialNumber");
                OnSerialNumberChanged();
            }
        }
        private global::System.String _SerialNumber;
        partial void OnSerialNumberChanging(global::System.String value);
        partial void OnSerialNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SystemDrive
        {
            get
            {
                return _SystemDrive;
            }
            set
            {
                OnSystemDriveChanging(value);
                ReportPropertyChanging("SystemDrive");
                _SystemDrive = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SystemDrive");
                OnSystemDriveChanged();
            }
        }
        private global::System.String _SystemDrive;
        partial void OnSystemDriveChanging(global::System.String value);
        partial void OnSystemDriveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ImageValidationModel", "FK_Application_Computer", "Application")]
        public EntityCollection<Application> Applications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Application>("ImageValidationModel.FK_Application_Computer", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Application>("ImageValidationModel.FK_Application_Computer", "Application", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ImageValidationModel", "FK_Computer_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ImageValidationModel.FK_Computer_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ImageValidationModel.FK_Computer_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ImageValidationModel.FK_Computer_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ImageValidationModel.FK_Computer_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ImageValidationModel", "FK_Driver_Computer", "Driver")]
        public EntityCollection<Driver> Drivers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Driver>("ImageValidationModel.FK_Driver_Computer", "Driver");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Driver>("ImageValidationModel.FK_Driver_Computer", "Driver", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ImageValidationModel", "FK_FileFolder_Computer", "FileFolder")]
        public EntityCollection<FileFolder> FileFolders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FileFolder>("ImageValidationModel.FK_FileFolder_Computer", "FileFolder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FileFolder>("ImageValidationModel.FK_FileFolder_Computer", "FileFolder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ImageValidationModel", "FK_HotFix_Computer", "HotFix")]
        public EntityCollection<HotFix> HotFixes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HotFix>("ImageValidationModel.FK_HotFix_Computer", "HotFix");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HotFix>("ImageValidationModel.FK_HotFix_Computer", "HotFix", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ImageValidationModel", "FK_RegistryGrouping_Computer", "RegistryGrouping")]
        public EntityCollection<RegistryGrouping> RegistryGroupings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RegistryGrouping>("ImageValidationModel.FK_RegistryGrouping_Computer", "RegistryGrouping");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RegistryGrouping>("ImageValidationModel.FK_RegistryGrouping_Computer", "RegistryGrouping", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ImageValidationModel", Name="Driver")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Driver : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Driver object.
        /// </summary>
        /// <param name="driverID">Initial value of the DriverID property.</param>
        public static Driver CreateDriver(global::System.Int32 driverID)
        {
            Driver driver = new Driver();
            driver.DriverID = driverID;
            return driver;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DriverID
        {
            get
            {
                return _DriverID;
            }
            set
            {
                if (_DriverID != value)
                {
                    OnDriverIDChanging(value);
                    ReportPropertyChanging("DriverID");
                    _DriverID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DriverID");
                    OnDriverIDChanged();
                }
            }
        }
        private global::System.Int32 _DriverID;
        partial void OnDriverIDChanging(global::System.Int32 value);
        partial void OnDriverIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ComputerID
        {
            get
            {
                return _ComputerID;
            }
            set
            {
                OnComputerIDChanging(value);
                ReportPropertyChanging("ComputerID");
                _ComputerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ComputerID");
                OnComputerIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ComputerID;
        partial void OnComputerIDChanging(Nullable<global::System.Int32> value);
        partial void OnComputerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompatID
        {
            get
            {
                return _CompatID;
            }
            set
            {
                OnCompatIDChanging(value);
                ReportPropertyChanging("CompatID");
                _CompatID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CompatID");
                OnCompatIDChanged();
            }
        }
        private global::System.String _CompatID;
        partial void OnCompatIDChanging(global::System.String value);
        partial void OnCompatIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DeviceClass
        {
            get
            {
                return _DeviceClass;
            }
            set
            {
                OnDeviceClassChanging(value);
                ReportPropertyChanging("DeviceClass");
                _DeviceClass = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DeviceClass");
                OnDeviceClassChanged();
            }
        }
        private global::System.String _DeviceClass;
        partial void OnDeviceClassChanging(global::System.String value);
        partial void OnDeviceClassChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DeviceID
        {
            get
            {
                return _DeviceID;
            }
            set
            {
                OnDeviceIDChanging(value);
                ReportPropertyChanging("DeviceID");
                _DeviceID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DeviceID");
                OnDeviceIDChanged();
            }
        }
        private global::System.String _DeviceID;
        partial void OnDeviceIDChanging(global::System.String value);
        partial void OnDeviceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DeviceName
        {
            get
            {
                return _DeviceName;
            }
            set
            {
                OnDeviceNameChanging(value);
                ReportPropertyChanging("DeviceName");
                _DeviceName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DeviceName");
                OnDeviceNameChanged();
            }
        }
        private global::System.String _DeviceName;
        partial void OnDeviceNameChanging(global::System.String value);
        partial void OnDeviceNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DriverDate
        {
            get
            {
                return _DriverDate;
            }
            set
            {
                OnDriverDateChanging(value);
                ReportPropertyChanging("DriverDate");
                _DriverDate = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DriverDate");
                OnDriverDateChanged();
            }
        }
        private global::System.String _DriverDate;
        partial void OnDriverDateChanging(global::System.String value);
        partial void OnDriverDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DriverProviderName
        {
            get
            {
                return _DriverProviderName;
            }
            set
            {
                OnDriverProviderNameChanging(value);
                ReportPropertyChanging("DriverProviderName");
                _DriverProviderName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DriverProviderName");
                OnDriverProviderNameChanged();
            }
        }
        private global::System.String _DriverProviderName;
        partial void OnDriverProviderNameChanging(global::System.String value);
        partial void OnDriverProviderNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DriverVersion
        {
            get
            {
                return _DriverVersion;
            }
            set
            {
                OnDriverVersionChanging(value);
                ReportPropertyChanging("DriverVersion");
                _DriverVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DriverVersion");
                OnDriverVersionChanged();
            }
        }
        private global::System.String _DriverVersion;
        partial void OnDriverVersionChanging(global::System.String value);
        partial void OnDriverVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FriendlyName
        {
            get
            {
                return _FriendlyName;
            }
            set
            {
                OnFriendlyNameChanging(value);
                ReportPropertyChanging("FriendlyName");
                _FriendlyName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FriendlyName");
                OnFriendlyNameChanged();
            }
        }
        private global::System.String _FriendlyName;
        partial void OnFriendlyNameChanging(global::System.String value);
        partial void OnFriendlyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HardWareID
        {
            get
            {
                return _HardWareID;
            }
            set
            {
                OnHardWareIDChanging(value);
                ReportPropertyChanging("HardWareID");
                _HardWareID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HardWareID");
                OnHardWareIDChanged();
            }
        }
        private global::System.String _HardWareID;
        partial void OnHardWareIDChanging(global::System.String value);
        partial void OnHardWareIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InfName
        {
            get
            {
                return _InfName;
            }
            set
            {
                OnInfNameChanging(value);
                ReportPropertyChanging("InfName");
                _InfName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InfName");
                OnInfNameChanged();
            }
        }
        private global::System.String _InfName;
        partial void OnInfNameChanging(global::System.String value);
        partial void OnInfNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IsSigned
        {
            get
            {
                return _IsSigned;
            }
            set
            {
                OnIsSignedChanging(value);
                ReportPropertyChanging("IsSigned");
                _IsSigned = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IsSigned");
                OnIsSignedChanged();
            }
        }
        private global::System.String _IsSigned;
        partial void OnIsSignedChanging(global::System.String value);
        partial void OnIsSignedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Manufacturer
        {
            get
            {
                return _Manufacturer;
            }
            set
            {
                OnManufacturerChanging(value);
                ReportPropertyChanging("Manufacturer");
                _Manufacturer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Manufacturer");
                OnManufacturerChanged();
            }
        }
        private global::System.String _Manufacturer;
        partial void OnManufacturerChanging(global::System.String value);
        partial void OnManufacturerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PDO
        {
            get
            {
                return _PDO;
            }
            set
            {
                OnPDOChanging(value);
                ReportPropertyChanging("PDO");
                _PDO = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PDO");
                OnPDOChanged();
            }
        }
        private global::System.String _PDO;
        partial void OnPDOChanging(global::System.String value);
        partial void OnPDOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Signer
        {
            get
            {
                return _Signer;
            }
            set
            {
                OnSignerChanging(value);
                ReportPropertyChanging("Signer");
                _Signer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Signer");
                OnSignerChanged();
            }
        }
        private global::System.String _Signer;
        partial void OnSignerChanging(global::System.String value);
        partial void OnSignerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsRequired
        {
            get
            {
                return _IsRequired;
            }
            set
            {
                OnIsRequiredChanging(value);
                ReportPropertyChanging("IsRequired");
                _IsRequired = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsRequired");
                OnIsRequiredChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsRequired;
        partial void OnIsRequiredChanging(Nullable<global::System.Boolean> value);
        partial void OnIsRequiredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String httpUrl
        {
            get
            {
                return _httpUrl;
            }
            set
            {
                OnhttpUrlChanging(value);
                ReportPropertyChanging("httpUrl");
                _httpUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("httpUrl");
                OnhttpUrlChanged();
            }
        }
        private global::System.String _httpUrl;
        partial void OnhttpUrlChanging(global::System.String value);
        partial void OnhttpUrlChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ImageValidationModel", "FK_ApplicationDriverDepency_Driver", "ApplicationDriverDepency")]
        public EntityCollection<ApplicationDriverDepency> ApplicationDriverDepencies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ApplicationDriverDepency>("ImageValidationModel.FK_ApplicationDriverDepency_Driver", "ApplicationDriverDepency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ApplicationDriverDepency>("ImageValidationModel.FK_ApplicationDriverDepency_Driver", "ApplicationDriverDepency", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ImageValidationModel", "FK_Driver_Computer", "Computer")]
        public Computer Computer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Computer>("ImageValidationModel.FK_Driver_Computer", "Computer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Computer>("ImageValidationModel.FK_Driver_Computer", "Computer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Computer> ComputerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Computer>("ImageValidationModel.FK_Driver_Computer", "Computer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Computer>("ImageValidationModel.FK_Driver_Computer", "Computer", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ImageValidationModel", Name="EmployeeLogin")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployeeLogin : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeeLogin object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        public static EmployeeLogin CreateEmployeeLogin(global::System.Int32 id, global::System.String userID, global::System.String password)
        {
            EmployeeLogin employeeLogin = new EmployeeLogin();
            employeeLogin.ID = id;
            employeeLogin.UserID = userID;
            employeeLogin.Password = password;
            return employeeLogin;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.String _UserID;
        partial void OnUserIDChanging(global::System.String value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ImageValidationModel", Name="FailedLogon")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FailedLogon : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FailedLogon object.
        /// </summary>
        /// <param name="failID">Initial value of the FailID property.</param>
        public static FailedLogon CreateFailedLogon(global::System.Int32 failID)
        {
            FailedLogon failedLogon = new FailedLogon();
            failedLogon.FailID = failID;
            return failedLogon;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FailID
        {
            get
            {
                return _FailID;
            }
            set
            {
                if (_FailID != value)
                {
                    OnFailIDChanging(value);
                    ReportPropertyChanging("FailID");
                    _FailID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FailID");
                    OnFailIDChanged();
                }
            }
        }
        private global::System.Int32 _FailID;
        partial void OnFailIDChanging(global::System.Int32 value);
        partial void OnFailIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _UserID;
        partial void OnUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateTime
        {
            get
            {
                return _DateTime;
            }
            set
            {
                OnDateTimeChanging(value);
                ReportPropertyChanging("DateTime");
                _DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTime");
                OnDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateTime;
        partial void OnDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnDateTimeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ImageValidationModel", "FK_FailedLogon_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ImageValidationModel.FK_FailedLogon_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ImageValidationModel.FK_FailedLogon_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ImageValidationModel.FK_FailedLogon_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ImageValidationModel.FK_FailedLogon_User", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ImageValidationModel", Name="FileFolder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FileFolder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FileFolder object.
        /// </summary>
        /// <param name="fileFolderID">Initial value of the FileFolderID property.</param>
        public static FileFolder CreateFileFolder(global::System.Int32 fileFolderID)
        {
            FileFolder fileFolder = new FileFolder();
            fileFolder.FileFolderID = fileFolderID;
            return fileFolder;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FileFolderID
        {
            get
            {
                return _FileFolderID;
            }
            set
            {
                if (_FileFolderID != value)
                {
                    OnFileFolderIDChanging(value);
                    ReportPropertyChanging("FileFolderID");
                    _FileFolderID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FileFolderID");
                    OnFileFolderIDChanged();
                }
            }
        }
        private global::System.Int32 _FileFolderID;
        partial void OnFileFolderIDChanging(global::System.Int32 value);
        partial void OnFileFolderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ComputerID
        {
            get
            {
                return _ComputerID;
            }
            set
            {
                OnComputerIDChanging(value);
                ReportPropertyChanging("ComputerID");
                _ComputerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ComputerID");
                OnComputerIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ComputerID;
        partial void OnComputerIDChanging(Nullable<global::System.Int32> value);
        partial void OnComputerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private global::System.String _Location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FileFolderTypeID
        {
            get
            {
                return _FileFolderTypeID;
            }
            set
            {
                OnFileFolderTypeIDChanging(value);
                ReportPropertyChanging("FileFolderTypeID");
                _FileFolderTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FileFolderTypeID");
                OnFileFolderTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _FileFolderTypeID;
        partial void OnFileFolderTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnFileFolderTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ImageValidationModel", "FK_FileFolder_Computer", "Computer")]
        public Computer Computer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Computer>("ImageValidationModel.FK_FileFolder_Computer", "Computer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Computer>("ImageValidationModel.FK_FileFolder_Computer", "Computer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Computer> ComputerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Computer>("ImageValidationModel.FK_FileFolder_Computer", "Computer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Computer>("ImageValidationModel.FK_FileFolder_Computer", "Computer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ImageValidationModel", "FK_FileFolder_FileFolderType", "FileFolderType")]
        public FileFolderType FileFolderType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileFolderType>("ImageValidationModel.FK_FileFolder_FileFolderType", "FileFolderType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileFolderType>("ImageValidationModel.FK_FileFolder_FileFolderType", "FileFolderType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FileFolderType> FileFolderTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileFolderType>("ImageValidationModel.FK_FileFolder_FileFolderType", "FileFolderType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FileFolderType>("ImageValidationModel.FK_FileFolder_FileFolderType", "FileFolderType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ImageValidationModel", Name="FileFolderType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FileFolderType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FileFolderType object.
        /// </summary>
        /// <param name="fileFolderTypeID">Initial value of the FileFolderTypeID property.</param>
        public static FileFolderType CreateFileFolderType(global::System.Int32 fileFolderTypeID)
        {
            FileFolderType fileFolderType = new FileFolderType();
            fileFolderType.FileFolderTypeID = fileFolderTypeID;
            return fileFolderType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FileFolderTypeID
        {
            get
            {
                return _FileFolderTypeID;
            }
            set
            {
                if (_FileFolderTypeID != value)
                {
                    OnFileFolderTypeIDChanging(value);
                    ReportPropertyChanging("FileFolderTypeID");
                    _FileFolderTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FileFolderTypeID");
                    OnFileFolderTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _FileFolderTypeID;
        partial void OnFileFolderTypeIDChanging(global::System.Int32 value);
        partial void OnFileFolderTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ImageValidationModel", "FK_FileFolder_FileFolderType", "FileFolder")]
        public EntityCollection<FileFolder> FileFolders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FileFolder>("ImageValidationModel.FK_FileFolder_FileFolderType", "FileFolder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FileFolder>("ImageValidationModel.FK_FileFolder_FileFolderType", "FileFolder", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ImageValidationModel", Name="HotFix")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HotFix : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HotFix object.
        /// </summary>
        /// <param name="hotFixID">Initial value of the HotFixID property.</param>
        public static HotFix CreateHotFix(global::System.Int32 hotFixID)
        {
            HotFix hotFix = new HotFix();
            hotFix.HotFixID = hotFixID;
            return hotFix;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HotFixID
        {
            get
            {
                return _HotFixID;
            }
            set
            {
                if (_HotFixID != value)
                {
                    OnHotFixIDChanging(value);
                    ReportPropertyChanging("HotFixID");
                    _HotFixID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HotFixID");
                    OnHotFixIDChanged();
                }
            }
        }
        private global::System.Int32 _HotFixID;
        partial void OnHotFixIDChanging(global::System.Int32 value);
        partial void OnHotFixIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ComputerID
        {
            get
            {
                return _ComputerID;
            }
            set
            {
                OnComputerIDChanging(value);
                ReportPropertyChanging("ComputerID");
                _ComputerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ComputerID");
                OnComputerIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ComputerID;
        partial void OnComputerIDChanging(Nullable<global::System.Int32> value);
        partial void OnComputerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CSName
        {
            get
            {
                return _CSName;
            }
            set
            {
                OnCSNameChanging(value);
                ReportPropertyChanging("CSName");
                _CSName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CSName");
                OnCSNameChanged();
            }
        }
        private global::System.String _CSName;
        partial void OnCSNameChanging(global::System.String value);
        partial void OnCSNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InstallDate
        {
            get
            {
                return _InstallDate;
            }
            set
            {
                OnInstallDateChanging(value);
                ReportPropertyChanging("InstallDate");
                _InstallDate = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InstallDate");
                OnInstallDateChanged();
            }
        }
        private global::System.String _InstallDate;
        partial void OnInstallDateChanging(global::System.String value);
        partial void OnInstallDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InstalledBy
        {
            get
            {
                return _InstalledBy;
            }
            set
            {
                OnInstalledByChanging(value);
                ReportPropertyChanging("InstalledBy");
                _InstalledBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InstalledBy");
                OnInstalledByChanged();
            }
        }
        private global::System.String _InstalledBy;
        partial void OnInstalledByChanging(global::System.String value);
        partial void OnInstalledByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsRequired
        {
            get
            {
                return _IsRequired;
            }
            set
            {
                OnIsRequiredChanging(value);
                ReportPropertyChanging("IsRequired");
                _IsRequired = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsRequired");
                OnIsRequiredChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsRequired;
        partial void OnIsRequiredChanging(Nullable<global::System.Boolean> value);
        partial void OnIsRequiredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HotFixIDs
        {
            get
            {
                return _HotFixIDs;
            }
            set
            {
                OnHotFixIDsChanging(value);
                ReportPropertyChanging("HotFixIDs");
                _HotFixIDs = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HotFixIDs");
                OnHotFixIDsChanged();
            }
        }
        private global::System.String _HotFixIDs;
        partial void OnHotFixIDsChanging(global::System.String value);
        partial void OnHotFixIDsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ImageValidationModel", "FK_HotFix_Computer", "Computer")]
        public Computer Computer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Computer>("ImageValidationModel.FK_HotFix_Computer", "Computer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Computer>("ImageValidationModel.FK_HotFix_Computer", "Computer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Computer> ComputerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Computer>("ImageValidationModel.FK_HotFix_Computer", "Computer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Computer>("ImageValidationModel.FK_HotFix_Computer", "Computer", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ImageValidationModel", Name="OperatingSystem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OperatingSystem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OperatingSystem object.
        /// </summary>
        /// <param name="oSID">Initial value of the OSID property.</param>
        public static OperatingSystem CreateOperatingSystem(global::System.Int32 oSID)
        {
            OperatingSystem operatingSystem = new OperatingSystem();
            operatingSystem.OSID = oSID;
            return operatingSystem;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OSID
        {
            get
            {
                return _OSID;
            }
            set
            {
                if (_OSID != value)
                {
                    OnOSIDChanging(value);
                    ReportPropertyChanging("OSID");
                    _OSID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OSID");
                    OnOSIDChanged();
                }
            }
        }
        private global::System.Int32 _OSID;
        partial void OnOSIDChanging(global::System.Int32 value);
        partial void OnOSIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OSName
        {
            get
            {
                return _OSName;
            }
            set
            {
                OnOSNameChanging(value);
                ReportPropertyChanging("OSName");
                _OSName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OSName");
                OnOSNameChanged();
            }
        }
        private global::System.String _OSName;
        partial void OnOSNameChanging(global::System.String value);
        partial void OnOSNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ImageValidationModel", Name="Permission")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Permission : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Permission object.
        /// </summary>
        /// <param name="permissionID">Initial value of the PermissionID property.</param>
        public static Permission CreatePermission(global::System.Int32 permissionID)
        {
            Permission permission = new Permission();
            permission.PermissionID = permissionID;
            return permission;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PermissionID
        {
            get
            {
                return _PermissionID;
            }
            set
            {
                if (_PermissionID != value)
                {
                    OnPermissionIDChanging(value);
                    ReportPropertyChanging("PermissionID");
                    _PermissionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PermissionID");
                    OnPermissionIDChanged();
                }
            }
        }
        private global::System.Int32 _PermissionID;
        partial void OnPermissionIDChanging(global::System.Int32 value);
        partial void OnPermissionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RoleDescription
        {
            get
            {
                return _RoleDescription;
            }
            set
            {
                OnRoleDescriptionChanging(value);
                ReportPropertyChanging("RoleDescription");
                _RoleDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RoleDescription");
                OnRoleDescriptionChanged();
            }
        }
        private global::System.String _RoleDescription;
        partial void OnRoleDescriptionChanging(global::System.String value);
        partial void OnRoleDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ImageValidationModel", "FK_User_Permission", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("ImageValidationModel.FK_User_Permission", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("ImageValidationModel.FK_User_Permission", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ImageValidationModel", "FK_UserPermission_Permission", "UserPermission")]
        public EntityCollection<UserPermission> UserPermissions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserPermission>("ImageValidationModel.FK_UserPermission_Permission", "UserPermission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserPermission>("ImageValidationModel.FK_UserPermission_Permission", "UserPermission", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ImageValidationModel", Name="Product")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Product : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Product object.
        /// </summary>
        /// <param name="productID">Initial value of the ProductID property.</param>
        public static Product CreateProduct(global::System.Int32 productID)
        {
            Product product = new Product();
            product.ProductID = productID;
            return product;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                if (_ProductID != value)
                {
                    OnProductIDChanging(value);
                    ReportPropertyChanging("ProductID");
                    _ProductID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductID");
                    OnProductIDChanged();
                }
            }
        }
        private global::System.Int32 _ProductID;
        partial void OnProductIDChanging(global::System.Int32 value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProductName
        {
            get
            {
                return _ProductName;
            }
            set
            {
                OnProductNameChanging(value);
                ReportPropertyChanging("ProductName");
                _ProductName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProductName");
                OnProductNameChanged();
            }
        }
        private global::System.String _ProductName;
        partial void OnProductNameChanging(global::System.String value);
        partial void OnProductNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ImageValidationModel", Name="QuickSearch")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class QuickSearch : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new QuickSearch object.
        /// </summary>
        /// <param name="quickSearchID">Initial value of the QuickSearchID property.</param>
        public static QuickSearch CreateQuickSearch(global::System.Int32 quickSearchID)
        {
            QuickSearch quickSearch = new QuickSearch();
            quickSearch.QuickSearchID = quickSearchID;
            return quickSearch;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuickSearchID
        {
            get
            {
                return _QuickSearchID;
            }
            set
            {
                if (_QuickSearchID != value)
                {
                    OnQuickSearchIDChanging(value);
                    ReportPropertyChanging("QuickSearchID");
                    _QuickSearchID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("QuickSearchID");
                    OnQuickSearchIDChanged();
                }
            }
        }
        private global::System.Int32 _QuickSearchID;
        partial void OnQuickSearchIDChanging(global::System.Int32 value);
        partial void OnQuickSearchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String QuickSearchName
        {
            get
            {
                return _QuickSearchName;
            }
            set
            {
                OnQuickSearchNameChanging(value);
                ReportPropertyChanging("QuickSearchName");
                _QuickSearchName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("QuickSearchName");
                OnQuickSearchNameChanged();
            }
        }
        private global::System.String _QuickSearchName;
        partial void OnQuickSearchNameChanging(global::System.String value);
        partial void OnQuickSearchNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ImageValidationModel", Name="Registry")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Registry : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Registry object.
        /// </summary>
        /// <param name="registryID">Initial value of the RegistryID property.</param>
        public static Registry CreateRegistry(global::System.Int32 registryID)
        {
            Registry registry = new Registry();
            registry.RegistryID = registryID;
            return registry;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RegistryID
        {
            get
            {
                return _RegistryID;
            }
            set
            {
                if (_RegistryID != value)
                {
                    OnRegistryIDChanging(value);
                    ReportPropertyChanging("RegistryID");
                    _RegistryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RegistryID");
                    OnRegistryIDChanged();
                }
            }
        }
        private global::System.Int32 _RegistryID;
        partial void OnRegistryIDChanging(global::System.Int32 value);
        partial void OnRegistryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Key
        {
            get
            {
                return _Key;
            }
            set
            {
                OnKeyChanging(value);
                ReportPropertyChanging("Key");
                _Key = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Key");
                OnKeyChanged();
            }
        }
        private global::System.String _Key;
        partial void OnKeyChanging(global::System.String value);
        partial void OnKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ValueData
        {
            get
            {
                return _ValueData;
            }
            set
            {
                OnValueDataChanging(value);
                ReportPropertyChanging("ValueData");
                _ValueData = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ValueData");
                OnValueDataChanged();
            }
        }
        private global::System.String _ValueData;
        partial void OnValueDataChanging(global::System.String value);
        partial void OnValueDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DataType
        {
            get
            {
                return _DataType;
            }
            set
            {
                OnDataTypeChanging(value);
                ReportPropertyChanging("DataType");
                _DataType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DataType");
                OnDataTypeChanged();
            }
        }
        private global::System.String _DataType;
        partial void OnDataTypeChanging(global::System.String value);
        partial void OnDataTypeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ImageValidationModel", "FK_RegistryGrouping_Registry", "RegistryGrouping")]
        public EntityCollection<RegistryGrouping> RegistryGroupings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RegistryGrouping>("ImageValidationModel.FK_RegistryGrouping_Registry", "RegistryGrouping");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RegistryGrouping>("ImageValidationModel.FK_RegistryGrouping_Registry", "RegistryGrouping", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ImageValidationModel", Name="RegistryGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RegistryGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RegistryGroup object.
        /// </summary>
        /// <param name="registryGroupID">Initial value of the RegistryGroupID property.</param>
        public static RegistryGroup CreateRegistryGroup(global::System.Int32 registryGroupID)
        {
            RegistryGroup registryGroup = new RegistryGroup();
            registryGroup.RegistryGroupID = registryGroupID;
            return registryGroup;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RegistryGroupID
        {
            get
            {
                return _RegistryGroupID;
            }
            set
            {
                if (_RegistryGroupID != value)
                {
                    OnRegistryGroupIDChanging(value);
                    ReportPropertyChanging("RegistryGroupID");
                    _RegistryGroupID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RegistryGroupID");
                    OnRegistryGroupIDChanged();
                }
            }
        }
        private global::System.Int32 _RegistryGroupID;
        partial void OnRegistryGroupIDChanging(global::System.Int32 value);
        partial void OnRegistryGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FileName
        {
            get
            {
                return _FileName;
            }
            set
            {
                OnFileNameChanging(value);
                ReportPropertyChanging("FileName");
                _FileName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FileName");
                OnFileNameChanged();
            }
        }
        private global::System.String _FileName;
        partial void OnFileNameChanging(global::System.String value);
        partial void OnFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ImageValidationModel", "FK_RegistryGrouping_RegistryGroup", "RegistryGrouping")]
        public EntityCollection<RegistryGrouping> RegistryGroupings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RegistryGrouping>("ImageValidationModel.FK_RegistryGrouping_RegistryGroup", "RegistryGrouping");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RegistryGrouping>("ImageValidationModel.FK_RegistryGrouping_RegistryGroup", "RegistryGrouping", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ImageValidationModel", Name="RegistryGrouping")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RegistryGrouping : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RegistryGrouping object.
        /// </summary>
        /// <param name="registryGroupingID">Initial value of the RegistryGroupingID property.</param>
        public static RegistryGrouping CreateRegistryGrouping(global::System.Int32 registryGroupingID)
        {
            RegistryGrouping registryGrouping = new RegistryGrouping();
            registryGrouping.RegistryGroupingID = registryGroupingID;
            return registryGrouping;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RegistryGroupingID
        {
            get
            {
                return _RegistryGroupingID;
            }
            set
            {
                if (_RegistryGroupingID != value)
                {
                    OnRegistryGroupingIDChanging(value);
                    ReportPropertyChanging("RegistryGroupingID");
                    _RegistryGroupingID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RegistryGroupingID");
                    OnRegistryGroupingIDChanged();
                }
            }
        }
        private global::System.Int32 _RegistryGroupingID;
        partial void OnRegistryGroupingIDChanging(global::System.Int32 value);
        partial void OnRegistryGroupingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RegistryGroupID
        {
            get
            {
                return _RegistryGroupID;
            }
            set
            {
                OnRegistryGroupIDChanging(value);
                ReportPropertyChanging("RegistryGroupID");
                _RegistryGroupID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegistryGroupID");
                OnRegistryGroupIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RegistryGroupID;
        partial void OnRegistryGroupIDChanging(Nullable<global::System.Int32> value);
        partial void OnRegistryGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RegistryID
        {
            get
            {
                return _RegistryID;
            }
            set
            {
                OnRegistryIDChanging(value);
                ReportPropertyChanging("RegistryID");
                _RegistryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegistryID");
                OnRegistryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RegistryID;
        partial void OnRegistryIDChanging(Nullable<global::System.Int32> value);
        partial void OnRegistryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ComputerID
        {
            get
            {
                return _ComputerID;
            }
            set
            {
                OnComputerIDChanging(value);
                ReportPropertyChanging("ComputerID");
                _ComputerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ComputerID");
                OnComputerIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ComputerID;
        partial void OnComputerIDChanging(Nullable<global::System.Int32> value);
        partial void OnComputerIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ImageValidationModel", "FK_RegistryGrouping_Computer", "Computer")]
        public Computer Computer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Computer>("ImageValidationModel.FK_RegistryGrouping_Computer", "Computer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Computer>("ImageValidationModel.FK_RegistryGrouping_Computer", "Computer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Computer> ComputerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Computer>("ImageValidationModel.FK_RegistryGrouping_Computer", "Computer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Computer>("ImageValidationModel.FK_RegistryGrouping_Computer", "Computer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ImageValidationModel", "FK_RegistryGrouping_Registry", "Registry")]
        public Registry Registry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Registry>("ImageValidationModel.FK_RegistryGrouping_Registry", "Registry").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Registry>("ImageValidationModel.FK_RegistryGrouping_Registry", "Registry").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Registry> RegistryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Registry>("ImageValidationModel.FK_RegistryGrouping_Registry", "Registry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Registry>("ImageValidationModel.FK_RegistryGrouping_Registry", "Registry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ImageValidationModel", "FK_RegistryGrouping_RegistryGroup", "RegistryGroup")]
        public RegistryGroup RegistryGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RegistryGroup>("ImageValidationModel.FK_RegistryGrouping_RegistryGroup", "RegistryGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RegistryGroup>("ImageValidationModel.FK_RegistryGrouping_RegistryGroup", "RegistryGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RegistryGroup> RegistryGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RegistryGroup>("ImageValidationModel.FK_RegistryGrouping_RegistryGroup", "RegistryGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RegistryGroup>("ImageValidationModel.FK_RegistryGrouping_RegistryGroup", "RegistryGroup", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ImageValidationModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        public static User CreateUser(global::System.Int32 userID, global::System.String username, global::System.String password)
        {
            User user = new User();
            user.UserID = userID;
            user.Username = username;
            user.Password = password;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UserCreateDate
        {
            get
            {
                return _UserCreateDate;
            }
            set
            {
                OnUserCreateDateChanging(value);
                ReportPropertyChanging("UserCreateDate");
                _UserCreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserCreateDate");
                OnUserCreateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UserCreateDate;
        partial void OnUserCreateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUserCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DeleteRecord
        {
            get
            {
                return _DeleteRecord;
            }
            set
            {
                OnDeleteRecordChanging(value);
                ReportPropertyChanging("DeleteRecord");
                _DeleteRecord = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeleteRecord");
                OnDeleteRecordChanged();
            }
        }
        private Nullable<global::System.Int32> _DeleteRecord;
        partial void OnDeleteRecordChanging(Nullable<global::System.Int32> value);
        partial void OnDeleteRecordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PermissionID
        {
            get
            {
                return _PermissionID;
            }
            set
            {
                OnPermissionIDChanging(value);
                ReportPropertyChanging("PermissionID");
                _PermissionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PermissionID");
                OnPermissionIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PermissionID;
        partial void OnPermissionIDChanging(Nullable<global::System.Int32> value);
        partial void OnPermissionIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ImageValidationModel", "FK_AccountHistory_User", "AccountHistory")]
        public EntityCollection<AccountHistory> AccountHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccountHistory>("ImageValidationModel.FK_AccountHistory_User", "AccountHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccountHistory>("ImageValidationModel.FK_AccountHistory_User", "AccountHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ImageValidationModel", "FK_Computer_User", "Computer")]
        public EntityCollection<Computer> Computers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Computer>("ImageValidationModel.FK_Computer_User", "Computer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Computer>("ImageValidationModel.FK_Computer_User", "Computer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ImageValidationModel", "FK_FailedLogon_User", "FailedLogon")]
        public EntityCollection<FailedLogon> FailedLogons
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FailedLogon>("ImageValidationModel.FK_FailedLogon_User", "FailedLogon");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FailedLogon>("ImageValidationModel.FK_FailedLogon_User", "FailedLogon", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ImageValidationModel", "FK_User_Permission", "Permission")]
        public Permission Permission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Permission>("ImageValidationModel.FK_User_Permission", "Permission").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Permission>("ImageValidationModel.FK_User_Permission", "Permission").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Permission> PermissionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Permission>("ImageValidationModel.FK_User_Permission", "Permission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Permission>("ImageValidationModel.FK_User_Permission", "Permission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ImageValidationModel", "FK_UserPermission_User", "UserPermission")]
        public EntityCollection<UserPermission> UserPermissions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserPermission>("ImageValidationModel.FK_UserPermission_User", "UserPermission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserPermission>("ImageValidationModel.FK_UserPermission_User", "UserPermission", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ImageValidationModel", Name="UserPermission")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserPermission : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserPermission object.
        /// </summary>
        /// <param name="permissionID">Initial value of the PermissionID property.</param>
        /// <param name="userPermissionID">Initial value of the UserPermissionID property.</param>
        public static UserPermission CreateUserPermission(global::System.Int32 permissionID, global::System.Int32 userPermissionID)
        {
            UserPermission userPermission = new UserPermission();
            userPermission.PermissionID = permissionID;
            userPermission.UserPermissionID = userPermissionID;
            return userPermission;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PermissionID
        {
            get
            {
                return _PermissionID;
            }
            set
            {
                OnPermissionIDChanging(value);
                ReportPropertyChanging("PermissionID");
                _PermissionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PermissionID");
                OnPermissionIDChanged();
            }
        }
        private global::System.Int32 _PermissionID;
        partial void OnPermissionIDChanging(global::System.Int32 value);
        partial void OnPermissionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _UserID;
        partial void OnUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserPermissionID
        {
            get
            {
                return _UserPermissionID;
            }
            set
            {
                if (_UserPermissionID != value)
                {
                    OnUserPermissionIDChanging(value);
                    ReportPropertyChanging("UserPermissionID");
                    _UserPermissionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserPermissionID");
                    OnUserPermissionIDChanged();
                }
            }
        }
        private global::System.Int32 _UserPermissionID;
        partial void OnUserPermissionIDChanging(global::System.Int32 value);
        partial void OnUserPermissionIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ImageValidationModel", "FK_UserPermission_Permission", "Permission")]
        public Permission Permission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Permission>("ImageValidationModel.FK_UserPermission_Permission", "Permission").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Permission>("ImageValidationModel.FK_UserPermission_Permission", "Permission").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Permission> PermissionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Permission>("ImageValidationModel.FK_UserPermission_Permission", "Permission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Permission>("ImageValidationModel.FK_UserPermission_Permission", "Permission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ImageValidationModel", "FK_UserPermission_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ImageValidationModel.FK_UserPermission_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ImageValidationModel.FK_UserPermission_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ImageValidationModel.FK_UserPermission_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ImageValidationModel.FK_UserPermission_User", "User", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
